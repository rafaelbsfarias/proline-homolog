#!/bin/bash

echo "=== Teste de Endpoints Seguros ==="
echo "Script que testa endpoints sem modificar dados"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# URL base do servidor
BASE_URL="http://localhost:3000"

# Fun√ß√£o para testar endpoint
test_endpoint() {
    local method=$1
    local endpoint=$2
    local description=$3

    echo -e "${BLUE}Testando: ${description}${NC}"
    echo -e "${YELLOW}${method} ${endpoint}${NC}"

    if [ "$method" = "GET" ]; then
        response=$(curl -s -o /dev/null -w "%{http_code}" "${BASE_URL}${endpoint}")
    else
        echo -e "${RED}M√©todo ${method} n√£o suportado neste script seguro${NC}"
        return 1
    fi

    if [ "$response" = "200" ]; then
        echo -e "${GREEN}‚úÖ Sucesso (HTTP ${response})${NC}"
    elif [ "$response" = "401" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Autentica√ß√£o necess√°ria (HTTP ${response})${NC}"
    elif [ "$response" = "404" ]; then
        echo -e "${RED}‚ùå Endpoint n√£o encontrado (HTTP ${response})${NC}"
    else
        echo -e "${RED}‚ùå Erro (HTTP ${response})${NC}"
    fi

    echo ""
}

# Verificar se o servidor est√° rodando
echo -e "${BLUE}üîç Verificando se o servidor est√° rodando...${NC}"
server_check=$(curl -s -o /dev/null -w "%{http_code}" "${BASE_URL}")

if [ "$server_check" != "200" ]; then
    echo -e "${RED}‚ùå Servidor n√£o est√° respondendo em ${BASE_URL}${NC}"
    echo -e "${YELLOW}üí° Execute 'npm run dev' para iniciar o servidor${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Servidor est√° rodando!${NC}"
echo ""

# Testes de endpoints p√∫blicos (sem autentica√ß√£o)
echo -e "${BLUE}üåê TESTANDO ENDPOINTS P√öBLICOS${NC}"
echo "=================================="

test_endpoint "GET" "/" "P√°gina inicial"
test_endpoint "GET" "/login" "P√°gina de login"
test_endpoint "GET" "/cadastro" "P√°gina de cadastro"

# Testes de endpoints que requerem autentica√ß√£o
echo -e "${BLUE}üîê TESTANDO ENDPOINTS PROTEGIDOS${NC}"
echo "===================================="

echo -e "${YELLOW}‚ö†Ô∏è  Estes endpoints requerem autentica√ß√£o JWT${NC}"
echo -e "${YELLOW}üí° Use um token v√°lido no header Authorization${NC}"
echo ""

test_endpoint "GET" "/api/auth/callback" "Callback de autentica√ß√£o"
test_endpoint "GET" "/api/users-count" "Contagem de usu√°rios"

# Testes espec√≠ficos do fluxo
echo -e "${BLUE}üöó TESTANDO ENDPOINTS DO FLUXO${NC}"
echo "================================="

echo -e "${YELLOW}Endpoints relacionados ao fluxo de an√°lise/or√ßamento:${NC}"
echo ""

# Cliente
test_endpoint "GET" "/api/client/vehicles" "Lista de ve√≠culos do cliente"
test_endpoint "GET" "/api/client/vehicle-inspection?vehicleId=1" "Inspe√ß√£o de ve√≠culo"

# Especialista
test_endpoint "GET" "/api/specialist/get-checklist?vehicleId=1" "Checklist do especialista"

# Parceiro
test_endpoint "GET" "/api/partner/dashboard" "Dashboard do parceiro"
test_endpoint "GET" "/api/partner/services" "Servi√ßos do parceiro"

# Admin
test_endpoint "GET" "/api/admin/pendentes" "Pend√™ncias do admin"
test_endpoint "GET" "/api/admin/usuarios" "Usu√°rios do admin"

echo -e "${GREEN}‚úÖ TESTES CONCLU√çDOS!${NC}"
echo ""
echo -e "${YELLOW}üí° Para testar endpoints que modificam dados:${NC}"
echo -e "${YELLOW}   Use o guia em test-guide.sh para testes manuais${NC}"
echo ""
echo -e "${BLUE}üìä RESUMO${NC}"
echo "=========="
echo -e "${CYAN}Este script testou apenas endpoints GET seguros${NC}"
echo -e "${CYAN}Nenhum dado foi modificado no banco de dados${NC}"
echo -e "${CYAN}Para testes completos, siga o guia manual${NC}"
