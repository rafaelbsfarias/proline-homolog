import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceRoleKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceRoleKey);

// Defini√ß√£o de servi√ßos por categoria com subcategorias
const servicesByCategory = {
  mechanics: {
    categoryName: 'Mec√¢nica',
    subcategories: {
      motor: {
        name: 'Motor',
        services: [
          {
            name: 'Troca de √≥leo e filtros',
            description: 'Troca completa de √≥leo do motor, filtro de √≥leo e filtro de ar',
            price: 150,
          },
          {
            name: 'Revis√£o completa do motor',
            description: 'Verifica√ß√£o de velas, cabos, correias e sistema de arrefecimento',
            price: 300,
          },
          {
            name: 'Reparo de sistema de freios',
            description: 'Revis√£o e reparo de discos, tambores e pastilhas de freio',
            price: 400,
          },
          {
            name: 'Troca de embreagem',
            description: 'Substitui√ß√£o completa do kit de embreagem',
            price: 800,
          },
          {
            name: 'Reparo de suspens√£o',
            description: 'Revis√£o e reparo de amortecedores, molas e terminais',
            price: 600,
          },
        ],
      },
      transmissao: {
        name: 'Transmiss√£o',
        services: [
          {
            name: 'Troca de fluido de transmiss√£o',
            description: 'Drenagem e reposi√ß√£o do fluido de c√¢mbio',
            price: 120,
          },
          {
            name: 'Reparo de c√¢mbio manual',
            description: 'Reparo e regulagem de c√¢mbio manual',
            price: 500,
          },
          {
            name: 'Manuten√ß√£o de diferencial',
            description: 'Revis√£o e lubrifica√ß√£o do diferencial',
            price: 250,
          },
        ],
      },
      eletrica: {
        name: 'El√©trica',
        services: [
          { name: 'Reparo de bateria', description: 'Teste e substitui√ß√£o de bateria', price: 200 },
          {
            name: 'Reparo de alternador',
            description: 'Revis√£o e reparo do sistema de carregamento',
            price: 350,
          },
          {
            name: 'Instala√ß√£o de acess√≥rios el√©tricos',
            description: 'Instala√ß√£o de som, alarme e acess√≥rios',
            price: 150,
          },
        ],
      },
    },
  },
  body_paint: {
    categoryName: 'Funilaria e Pintura',
    subcategories: {
      funilaria: {
        name: 'Funilaria',
        services: [
          {
            name: 'Reparo de amassados',
            description: 'Retirada de amassados sem pintura',
            price: 300,
          },
          {
            name: 'Troca de para-choques',
            description: 'Substitui√ß√£o de para-choques dianteiro/traseiro',
            price: 600,
          },
          {
            name: 'Reparo de portas e cap√¥',
            description: 'Reparo estrutural de portas e cap√¥',
            price: 800,
          },
          {
            name: 'Alinhamento e balanceamento',
            description: 'Corre√ß√£o da geometria das rodas',
            price: 100,
          },
        ],
      },
      pintura: {
        name: 'Pintura',
        services: [
          { name: 'Pintura completa', description: 'Pintura de todo o ve√≠culo', price: 2500 },
          { name: 'Pintura parcial', description: 'Pintura de painel, porta ou cap√¥', price: 800 },
          {
            name: 'Polimento e cristaliza√ß√£o',
            description: 'Polimento profissional e prote√ß√£o da pintura',
            price: 200,
          },
          {
            name: 'Remo√ß√£o de riscos',
            description: 'Corre√ß√£o de pequenos riscos na pintura',
            price: 150,
          },
        ],
      },
    },
  },
  washing: {
    categoryName: 'Lavagem',
    subcategories: {
      exterior: {
        name: 'Lavagem Exterior',
        services: [
          {
            name: 'Lavagem completa exterior',
            description: 'Lavagem, enceramento e secagem',
            price: 30,
          },
          {
            name: 'Lavagem ecol√≥gica',
            description: 'Lavagem com produtos biodegrad√°veis',
            price: 40,
          },
          {
            name: 'Lavagem com cera',
            description: 'Lavagem com aplica√ß√£o de cera protetora',
            price: 50,
          },
        ],
      },
      interior: {
        name: 'Higieniza√ß√£o Interior',
        services: [
          {
            name: 'Higieniza√ß√£o completa interior',
            description: 'Limpeza de bancos, carpete e pain√©is',
            price: 80,
          },
          {
            name: 'Limpeza de ar-condicionado',
            description: 'Limpeza e desinfec√ß√£o do sistema de ar',
            price: 60,
          },
          {
            name: 'Impermeabiliza√ß√£o de estofados',
            description: 'Prote√ß√£o contra umidade nos bancos',
            price: 100,
          },
        ],
      },
    },
  },
  tires: {
    categoryName: 'Pneus',
    subcategories: {
      montagem: {
        name: 'Montagem e Balanceamento',
        services: [
          {
            name: 'Montagem de pneus',
            description: 'Montagem profissional de pneus novos',
            price: 40,
          },
          {
            name: 'Balanceamento de rodas',
            description: 'Balanceamento computadorizado',
            price: 25,
          },
          {
            name: 'Alinhamento de dire√ß√£o',
            description: 'Corre√ß√£o da geometria da suspens√£o',
            price: 60,
          },
        ],
      },
      reparo: {
        name: 'Reparo e Manuten√ß√£o',
        services: [
          { name: 'Reparo de furos', description: 'Reparo de furos em pneus', price: 20 },
          { name: 'Calibragem de pneus', description: 'Ajuste da press√£o dos pneus', price: 10 },
          {
            name: 'Rota√ß√£o de pneus',
            description: 'Reorganiza√ß√£o dos pneus para desgaste uniforme',
            price: 30,
          },
        ],
      },
    },
  },
  loja: {
    categoryName: 'Loja',
    subcategories: {
      acessorios: {
        name: 'Acess√≥rios',
        services: [
          {
            name: 'Instala√ß√£o de pel√≠culas',
            description: 'Aplica√ß√£o de pel√≠culas de prote√ß√£o',
            price: 200,
          },
          {
            name: 'Instala√ß√£o de som automotivo',
            description: 'Instala√ß√£o completa de sistema de som',
            price: 300,
          },
          {
            name: 'Instala√ß√£o de alarme',
            description: 'Instala√ß√£o de sistema de alarme',
            price: 150,
          },
        ],
      },
      pecas: {
        name: 'Pe√ßas e Componentes',
        services: [
          { name: 'Venda de √≥leo e filtros', description: '√ìleos, filtros de √≥leo e ar', price: 0 },
          { name: 'Venda de velas e cabos', description: 'Velas de igni√ß√£o e cabos', price: 0 },
          {
            name: 'Venda de pastilhas de freio',
            description: 'Pastilhas dianteiras e traseiras',
            price: 0,
          },
        ],
      },
    },
  },
  patio_atacado: {
    categoryName: 'P√°tio Atacado',
    subcategories: {
      recepcao: {
        name: 'Recep√ß√£o de Ve√≠culos',
        services: [
          {
            name: 'Recep√ß√£o e inspe√ß√£o inicial',
            description: 'Avalia√ß√£o inicial do ve√≠culo',
            price: 50,
          },
          {
            name: 'Organiza√ß√£o no p√°tio',
            description: 'Posicionamento estrat√©gico no p√°tio',
            price: 25,
          },
          {
            name: 'Controle de entrada/sa√≠da',
            description: 'Registro de movimenta√ß√£o de ve√≠culos',
            price: 30,
          },
        ],
      },
      armazenamento: {
        name: 'Armazenamento',
        services: [
          {
            name: 'Armazenamento coberto',
            description: 'Armazenamento protegido da intemp√©rie',
            price: 15,
          },
          {
            name: 'Armazenamento descoberto',
            description: 'Armazenamento em √°rea aberta',
            price: 10,
          },
          {
            name: 'Armazenamento climatizado',
            description: 'Armazenamento com controle de temperatura',
            price: 25,
          },
        ],
      },
    },
  },
};

async function populatePartnerServices() {
  console.log('üöÄ Iniciando popula√ß√£o de servi√ßos dos parceiros...\n');

  // Buscar todos os parceiros e suas categorias
  const { data: partners, error: partnersError } = await supabase.from(
    'partners_service_categories'
  ).select(`
      partner_id,
      partners!inner(company_name),
      service_categories!inner(key, name)
    `);

  if (partnersError || !partners) {
    console.log('‚ùå Erro ao buscar parceiros:', partnersError);
    return;
  }

  console.log(`üìã Encontrados ${partners.length} parceiros associados a categorias\n`);

  let totalServicesCreated = 0;

  for (const partnerRelation of partners) {
    const partnerId = partnerRelation.partner_id;
    const partnerName = partnerRelation.partners.company_name;
    const categoryKey = partnerRelation.service_categories.key;
    const categoryName = partnerRelation.service_categories.name;

    console.log(`üîß Populando servi√ßos para: ${partnerName} (${categoryName})`);

    const categoryServices = servicesByCategory[categoryKey];
    if (!categoryServices) {
      console.log(`‚ö†Ô∏è  Servi√ßos n√£o definidos para categoria: ${categoryKey}`);
      continue;
    }

    let partnerServicesCreated = 0;

    // Para cada subcategoria
    for (const [subcategoryKey, subcategory] of Object.entries(categoryServices.subcategories)) {
      console.log(`  üìÇ Subcategoria: ${subcategory.name}`);

      // Para cada servi√ßo na subcategoria
      for (const service of subcategory.services) {
        try {
          const { error: serviceError } = await supabase.from('partner_services').insert({
            partner_id: partnerId,
            name: service.name,
            description: service.description,
            price: service.price,
            category: subcategory.name,
            category_id: null, // Pode ser usado para referenciar service_categories se necess√°rio
            created_at: new Date().toISOString(),
          });

          if (serviceError) {
            if (serviceError.code === '23505') {
              // Unique constraint violation
              console.log(`    ‚ö†Ô∏è  Servi√ßo j√° existe: ${service.name}`);
            } else {
              console.log(`    ‚ùå Erro ao criar servi√ßo ${service.name}:`, serviceError.message);
            }
          } else {
            console.log(`    ‚úÖ Criado: ${service.name} - R$ ${service.price}`);
            partnerServicesCreated++;
            totalServicesCreated++;
          }
        } catch (error) {
          console.log(`    ‚ùå Erro inesperado: ${error.message}`);
        }
      }
    }

    console.log(`üìä ${partnerName}: ${partnerServicesCreated} servi√ßos criados\n`);
  }

  console.log(`üéâ Processo conclu√≠do!`);
  console.log(`üìä Total de servi√ßos criados: ${totalServicesCreated}`);

  // Verificar resultado final
  const { data: finalServices, error: finalError } = await supabase
    .from('partner_services')
    .select('partner_id, name, category, price')
    .order('partner_id, category');

  if (!finalError && finalServices) {
    console.log('\nüìã Resumo final dos servi√ßos:');
    const servicesByPartner = {};
    finalServices.forEach(service => {
      if (!servicesByPartner[service.partner_id]) {
        servicesByPartner[service.partner_id] = [];
      }
      servicesByPartner[service.partner_id].push(service);
    });

    Object.entries(servicesByPartner).forEach(([partnerId, services]) => {
      console.log(`\nüè¢ Parceiro ${partnerId}:`);
      const servicesByCategory = {};
      services.forEach(service => {
        if (!servicesByCategory[service.category]) {
          servicesByCategory[service.category] = [];
        }
        servicesByCategory[service.category].push(service);
      });

      Object.entries(servicesByCategory).forEach(([category, catServices]) => {
        console.log(`  üìÇ ${category}: ${catServices.length} servi√ßos`);
      });
    });
  }
}

populatePartnerServices();
